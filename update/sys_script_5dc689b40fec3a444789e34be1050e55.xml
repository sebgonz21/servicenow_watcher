<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_kasp_watcher_watcher_events</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Perf Events 2</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	if(current == null || current.getValue('type') != "perf"){
		return;
	}
	//query=server=vusadrmre02%5Ecommand=forward%5Eparams=command=perfmon%26forward_params=
	var createEndpoint = function(monitor){
		var server = monitor.getValue('server');
		var endpoint;
		if(monitor.getValue('behind_firewall') == true){
			endpoint= "http://vsecsntools1.katespade.net:9999/application=watcher/";
			endpoint += 'query=server=';
			endpoint += server;
			endpoint += '%5E';
			endpoint += 'command=forward';
			endpoint += '%5E';
			endpoint += 'params=';
			endpoint += 'command=perfmon';
			endpoint += '%26';
			endpoint += 'forward_params=';
		}else{
			endpoint= "http://vsecsntools1.katespade.net:9999/application=watcher/";
			endpoint += 'query=server=';
			endpoint += server;
			endpoint += '%5E';
			endpoint += 'command=perfmon';
			endpoint += '%5E';
			endpoint += 'params=';
		}
		return endpoint;
	};
	
	var monitor = new GlideRecord('x_kasp_watcher_monitors');
	monitor.get(current.getValue('monitor'));
	
	var server = monitor.getValue('server');
	
	var gdt = new GlideDateTime();
	var gt = gdt.getLocalTime();
	var time =  gt.getByFormat("HH:mm:ss");
	var date = gdt.getLocalDate() + "";
	var dateArr = date.split("-");
	var newDate = dateArr[0] + dateArr[1] + dateArr[2];
	
	try{
		
		var rest = new sn_ws.RESTMessageV2();
		rest.setHttpMethod("get");
		
		var endpoint = createEndpoint(monitor);
		
		//gs.info('Getting Performance from ' + endpoint);
		
		rest.setEndpoint(endpoint);
		rest.setMIDServer('ProdMidServer2');
		rest.setHttpTimeout(10000);
		
		var response = rest.execute();
		response.waitForResponse(10);
		
		
		//gs.info('Success getting performance for ' + server);
		
		//gs.info("Response for " + server +": " + response.getBody());
		
		var perfmon = global.JSON.parse(response.getBody().toString());
				
		var drives = perfmon.disk.drives;
		var total_disk;
		var free_disk;
		var formattedDrives = [];
		var drive;
		
		for(var d = 0; d < drives.length; d++){
			drive = {
				"letter": drives[d].Caption,
				"total_size": drives[d].Size,
				"free_disk": drives[d].FreeSpace
			};
			
			formattedDrives.push(drive);
		}
		formattedDrives = global.JSON.stringify(formattedDrives);
		
		
		
		monitor.setValue('ram',global.JSON.stringify(perfmon.ram));
		monitor.setValue('cpu',global.JSON.stringify(perfmon.processor));
		monitor.setValue('os', global.JSON.stringify(perfmon.os));
		monitor.setValue('network', global.JSON.stringify(perfmon.netstat));
		monitor.setValue('drives',formattedDrives);
		monitor.update();
		//gs.info("updated performance for " + server);
	}catch(err){
		
		gs.info("Error getting performance for " + server + " " + err);

	}
	
	current.deleteRecord();
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>sebgar01</sys_created_by>
        <sys_created_on>2017-01-23 15:39:01</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_id>5dc689b40fec3a444789e34be1050e55</sys_id>
        <sys_mod_count>39</sys_mod_count>
        <sys_name>Perf Events 2</sys_name>
        <sys_overrides/>
        <sys_package display_value="Watcher" source="x_kasp_watcher">8eb44d282bad620045eeaacc17da152f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Watcher">8eb44d282bad620045eeaacc17da152f</sys_scope>
        <sys_update_name>sys_script_5dc689b40fec3a444789e34be1050e55</sys_update_name>
        <sys_updated_by>sebgar01</sys_updated_by>
        <sys_updated_on>2017-03-16 19:58:27</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
</record_update>
